{"version":3,"file":"easy-peasy.min.js","sources":["../src/lib.js","../src/easy-peasy.js","../src/context.js","../src/provider.js","../src/hooks.js","../node_modules/shallowequal/index.js"],"sourcesContent":["export const isStateObject = x =>\n  x !== null && typeof x === 'object' && !Array.isArray(x)\n","import {\n  applyMiddleware,\n  compose as reduxCompose,\n  createStore as reduxCreateStore,\n} from 'redux'\nimport memoizeOne from 'memoize-one'\nimport produce from 'immer'\nimport thunk from 'redux-thunk'\nimport { isStateObject } from './lib'\n\nconst effectSymbol = '__effect__'\nconst selectSymbol = '__select__'\nconst selectDependenciesSymbol = '__selectDependencies__'\nconst selectStateSymbol = '__selectState__'\nconst reducerSymbol = '__reducer__'\n\nconst get = (path, target) =>\n  path.reduce((acc, cur) => (isStateObject(acc) ? acc[cur] : undefined), target)\n\nconst set = (path, target, value) => {\n  path.reduce((acc, cur, idx) => {\n    if (idx + 1 === path.length) {\n      acc[cur] = value\n    } else {\n      acc[cur] = acc[cur] || {}\n    }\n    return acc[cur]\n  }, target)\n}\n\nconst tick = () => new Promise(resolve => setTimeout(resolve))\n\nconst startsWith = (target, search) =>\n  target.substr(0, search.length) === search\n\nexport const effect = fn => {\n  // eslint-disable-next-line no-param-reassign\n  fn[effectSymbol] = true\n  return fn\n}\n\nexport const select = (fn, dependencies) => {\n  const selector = memoizeOne(state => fn(state))\n  selector[selectSymbol] = true\n  selector[selectDependenciesSymbol] = dependencies\n  selector[selectStateSymbol] = {}\n  return selector\n}\n\nexport const reducer = fn => {\n  // eslint-disable-next-line no-param-reassign\n  fn[reducerSymbol] = true\n  return fn\n}\n\nexport const createStore = (model, options = {}) => {\n  const {\n    devTools = true,\n    middleware = [],\n    initialState = {},\n    injections,\n    compose,\n    reducerEnhancer = rootReducer => rootReducer,\n  } = options\n\n  const definition = {\n    ...model,\n    logFullState: state => {\n      // eslint-disable-next-line no-console\n      console.log(JSON.stringify(state, null, 2))\n    },\n  }\n\n  const references = {}\n  const defaultState = {}\n  const actionEffects = {}\n  const actionCreators = {}\n  const actionReducers = {}\n  const customReducers = []\n  const selectorReducers = []\n\n  const extract = (current, parentPath) =>\n    Object.keys(current).forEach(key => {\n      const value = current[key]\n      const path = [...parentPath, key]\n      if (typeof value === 'function') {\n        if (value[selectSymbol]) {\n          // skip\n          value[selectStateSymbol] = { parentPath, key, executed: false }\n          selectorReducers.push(value)\n        } else if (value[effectSymbol]) {\n          // Effect Action\n          const actionName = `@effect.${path.join('.')}`\n          const action = payload => {\n            if (devTools) {\n              references.dispatch({\n                type: actionName,\n                payload,\n              })\n            }\n            return value(\n              references.dispatch,\n              payload,\n              references.getState,\n              injections,\n              {\n                parent: parentPath,\n                path,\n              },\n            )\n          }\n          action.actionName = actionName\n          set(path, actionEffects, action)\n\n          // Effect Action Creator\n          set(path, actionCreators, payload =>\n            tick().then(() => references.dispatch(() => action(payload))),\n          )\n        } else if (value[reducerSymbol]) {\n          customReducers.push({ path, reducer: value })\n        } else {\n          // Reducer Action\n          const actionName = `@action.${path.join('.')}`\n          const action = (state, payload) =>\n            produce(state, draft =>\n              value(draft, payload, {\n                dispatch: references.dispatch,\n                dispatchLocal: get(path, references.dispatch),\n                getState: references.getState,\n              }),\n            )\n          action.actionName = actionName\n          set(path, actionReducers, action)\n\n          // Reducer Action Creator\n          set(path, actionCreators, payload =>\n            references.dispatch({\n              type: action.actionName,\n              payload,\n            }),\n          )\n        }\n      } else if (isStateObject(value) && Object.keys(value).length > 0) {\n        extract(value, path)\n      } else {\n        // State\n        const initialParentRef = get(parentPath, initialState)\n        if (initialParentRef && key in initialParentRef) {\n          set(path, defaultState, initialParentRef[key])\n        } else {\n          set(path, defaultState, value)\n        }\n      }\n    })\n\n  extract(definition, [])\n\n  const createReducers = () => {\n    const createActionsReducer = (current, path) => {\n      const actionReducersAtPath = Object.keys(current).reduce((acc, key) => {\n        const value = current[key]\n        if (typeof value === 'function' && !value[effectSymbol]) {\n          return [...acc, value]\n        }\n        return acc\n      }, [])\n      const stateAtPath = Object.keys(current).reduce(\n        (acc, key) => (isStateObject(current[key]) ? [...acc, key] : acc),\n        [],\n      )\n      const nestedReducers = stateAtPath.map(key => [\n        key,\n        createActionsReducer(current[key], [...path, key]),\n      ])\n      return (state = get(path, defaultState), action) => {\n        // short circuit effects as they are noop in reducers\n        if (startsWith(action.type, '@effect.')) {\n          return state\n        }\n        // short circuit actions if they aren't a match on current path\n        if (\n          path.length > 0 &&\n          !startsWith(action.type, `@action.${path.join('.')}`)\n        ) {\n          return state\n        }\n        const actionReducer = actionReducersAtPath.find(\n          x => x.actionName === action.type,\n        )\n        if (actionReducer) {\n          return actionReducer(state, action.payload)\n        }\n        for (let i = 0; i < nestedReducers.length; i += 1) {\n          const [key, red] = nestedReducers[i]\n          const newState = red(state[key], action)\n          if (state[key] !== newState) {\n            return {\n              ...state,\n              [key]: newState,\n            }\n          }\n        }\n        return state\n      }\n    }\n\n    const reducerForActions = createActionsReducer(actionReducers, [])\n\n    const reducerWithCustom =\n      customReducers.length > 0\n        ? (state, action) => {\n            const stateAfterActions = reducerForActions(state, action)\n            return produce(stateAfterActions, draft => {\n              customReducers.forEach(({ path: p, reducer: red }) => {\n                const current = get(p, draft)\n                set(p, draft, red(current, action))\n              })\n            })\n          }\n        : reducerForActions\n\n    const runSelectorReducer = (state, selector) => {\n      const { parentPath, key, executed } = selector[selectStateSymbol]\n      if (executed) {\n        return state\n      }\n      const dependencies = selector[selectDependenciesSymbol]\n\n      const stateAfterDependencies = dependencies\n        ? dependencies.reduce(runSelectorReducer, state)\n        : state\n\n      let newState = state\n\n      if (parentPath.length > 0) {\n        const target = get(parentPath, stateAfterDependencies)\n        if (target) {\n          const newValue = selector(target)\n          newState = produce(state, draft => {\n            const updateTarget = get(parentPath, draft)\n            updateTarget[key] = newValue\n          })\n        }\n      } else {\n        const newValue = selector(stateAfterDependencies)\n        newState = produce(state, draft => {\n          // eslint-disable-next-line no-param-reassign\n          draft[key] = newValue\n        })\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      selector[selectStateSymbol].executed = true\n      return newState\n    }\n\n    const runSelectors = state =>\n      selectorReducers.reduce(runSelectorReducer, state)\n\n    let isInitial = true\n\n    return selectorReducers.length > 0\n      ? (state, action) => {\n          const stateAfterActions = reducerWithCustom(state, action)\n          if (state !== stateAfterActions || isInitial) {\n            const stateAfterSelectors = runSelectors(stateAfterActions)\n            isInitial = false\n            selectorReducers.forEach(selector => {\n              // eslint-disable-next-line no-param-reassign\n              selector[selectStateSymbol].executed = false\n            })\n            return stateAfterSelectors\n          }\n          return stateAfterActions\n        }\n      : reducerWithCustom\n  }\n\n  const reducers = createReducers()\n\n  const composeEnhancers =\n    compose ||\n    (devTools &&\n    typeof window !== 'undefined' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n      : reduxCompose)\n\n  const store = reduxCreateStore(\n    reducerEnhancer(reducers),\n    defaultState,\n    composeEnhancers(applyMiddleware(thunk, ...middleware)),\n  )\n\n  // attach the action creators to dispatch\n  Object.keys(actionCreators).forEach(key => {\n    store.dispatch[key] = actionCreators[key]\n  })\n\n  references.dispatch = store.dispatch\n  references.getState = store.getState\n  references.getState.getState = store.getState\n\n  return store\n}\n","import { createContext } from 'react'\n\nconst StoreContext = createContext()\n\nexport default StoreContext\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport StoreContext from './context'\n\nconst StoreProvider = ({ children, store }) => (\n  <StoreContext.Provider value={store}>{children}</StoreContext.Provider>\n)\n\nStoreProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n  store: PropTypes.object.isRequired,\n}\n\nexport default StoreProvider\n","import { useState, useEffect, useContext, useRef } from 'react'\nimport shallowEqual from 'shallowequal'\nimport EasyPeasyContext from './context'\nimport { isStateObject } from './lib'\n\nexport function useStore(mapState, dependencies = []) {\n  const store = useContext(EasyPeasyContext)\n  const [state, setState] = useState(mapState(store.getState()))\n  // As our effect only fires on mount and unmount it won't have the state\n  // changes visible to it, therefore we use a mutable ref to track this.\n  const stateRef = useRef(state)\n  // Helps avoid firing of events when unsubscribed, i.e. unmounted\n  const isActive = useRef(true)\n  useEffect(() => {\n    const calculateState = () => {\n      const newState = mapState(store.getState())\n      isActive.current = true\n      if (\n        newState === stateRef.current ||\n        (isStateObject(newState) &&\n          isStateObject(stateRef.current) &&\n          shallowEqual(newState, stateRef.current))\n      ) {\n        // Do nothing\n        return\n      }\n      stateRef.current = newState\n      // The settimeout wrap fixes a strange issue where a setState would\n      // fire but the associated hook wouldn't receive it. It's almost as\n      // if the effect was handled in a synchronous manner in some part of\n      // the React reconciliation process that ended up with it not\n      // propagating\n      setTimeout(() => {\n        if (isActive.current) {\n          setState(newState)\n        }\n      })\n    }\n    calculateState()\n    const unsubscribe = store.subscribe(calculateState)\n    return () => {\n      unsubscribe()\n      isActive.current = false\n    }\n  }, dependencies)\n  return state\n}\nexport function useAction(mapActions) {\n  const store = useContext(EasyPeasyContext)\n  return mapActions(store.dispatch)\n}\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n"],"names":["isStateObject","x","_typeof","Array","isArray","effectSymbol","selectSymbol","selectDependenciesSymbol","selectStateSymbol","reducerSymbol","get","path","target","reduce","acc","cur","undefined","set","value","idx","length","startsWith","search","substr","StoreContext","createContext","model","options","devTools","middleware","initialState","injections","compose","reducerEnhancer","rootReducer","definition","logFullState","state","console","log","JSON","stringify","references","defaultState","actionEffects","actionCreators","actionReducers","customReducers","selectorReducers","extract","current","parentPath","Object","keys","forEach","key","executed","push","actionName","join","action","payload","dispatch","type","getState","parent","Promise","resolve","setTimeout","then","reducer","produce","draft","dispatchLocal","initialParentRef","reducerForActions","reducerWithCustom","runSelectorReducer","isInitial","reducers","createActionsReducer","actionReducersAtPath","nestedReducers","map","actionReducer","find","i","newState","red","stateAfterActions","p","selector","dependencies","stateAfterDependencies","newValue","stateAfterSelectors","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reduxCompose","store","reduxCreateStore","applyMiddleware","thunk","fn","memoizeOne","children","React","Provider","mapActions","useContext","EasyPeasyContext","mapState","useState","setState","stateRef","useRef","isActive","useEffect","calculateState","objA","objB","compare","compareContext","ret","call","keysA","keysB","bHasOwnProperty","prototype","hasOwnProperty","bind","valueA","valueB","shallowEqual","unsubscribe","subscribe"],"mappings":"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"}